import{w as n}from"./presets-B67F0CB-.js";import{o as r,n as s}from"./chunk-D4RADZKF-D4_s_IH5.js";import{M as i}from"./markdown-B-iucxVB.js";import"./useCSSVarCls-MKdiAhBR.js";import"./index-D4DweKH7.js";import"./useBreakpoint-57Y3d-K_.js";import"./mediaQueryUtil-BSyvLspT.js";const m=`
# 第一章 主要知识点
《编译原理》（第3版）（以下简称“主教材”）中第1章通过简要介绍编译器的各个逻辑阶段，对全书的内容做一个概述。由于此章中出现的大部分概念在以后各章会有详细介绍，因此不要求在学习此章时就都能理解这些概念。主要应掌握下面两点。

1. 基本概念：源语言、目标语言、翻译器、编译器、解释器。
2. 编译器的各个逻辑阶段，各阶段的主要功能。
`,e=`
# 第二章 主要知识点
主教材第 2 章主要应掌握下面一些内容。

1. 词法分析器的作用和接口，用高级语言编写词法分析器等，它们与词法分析器的实现有关。大部分教材上都有这方面的例子，这些问题比较适合作为实践题，因此本书没有安排这方面的习题，但不要认为进行这样的实践对编译原理的学习不重要。

2. 掌握以下概念，它们之间转换的技巧、方法或算法。
   - 非形式描述的语言 ↔ 正规式 (↔ 表示两个方向的转换都要掌握)
   - 正规式 → NFA (非确定的有限自动机)
   - 非形式描述的语言 ↔ NFA
   - NFA → DFA (确定的有限自动机)
   - DFA → 最简 DFA
   - 非形式描述的语言 ↔ DFA (或最简 DFA)

作为习题来说，第 2 章的难点是为非形式描述的语言寻找一种形式描述（正规式、确定的或非确定的有限自动机），因为不存在这样的转换算法。
`,p=`
# 第三章 主要知识点
主教材第 3 章主要应掌握下面一些内容。

1. 文法和语言的基本知识。有些教材把这方面内容单独作为一章，但是把它和语法分析方法放在一起学习，可以理解得更深刻一些。
2. 自上而下的语法分析方法：预测分析器（递归下降分析方法）、非递归的预测分析器（分析表方法）、LL(1) 文法。能够编写简单语言的预测分析递归程序。
3. 自下而上的语法分析方法：SLR(1) 方法、规范 LR(1) 方法和 LALR(1) 方法。在这三种方法中，重点是 SLR(1) 方法，SLR(1) 方法理解透彻了，其他两种方法就容易理解了。对于简单的语言，要能够手工构造这三种分析方法的分析表。同时还要知道它们的区别所在，便于直接判断一些简单文法属于哪一类文法而无需构造分析表。
4. LR 方法如何用于二义文法。
5. 语法分析的错误恢复方法。
6. 现在编译器已很少使用算符优先分析方法，因此有些教材已不介绍这种方法。在习题中保留了它和其他分析方法的比较。

本章的难点是写文法。本课程虽不要求掌握如何验证文法产生的语言，但了解这方面的技巧对判断所写文法正确与否是极有帮助的，本章有这方面的例子。

更难的是要求所写的文法还需满足一定的约束 [非二义、LR(1)] 等，本章有多个详细分析的例子。
`,L={1:m,2:e,3:p},u=n(function(){const{id:o}=r(),t=L[o]||"未找到对应内容";return s.jsx(i,{content:t})});export{u as default};
